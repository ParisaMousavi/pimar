// automatically generated by Xtext
grammar pimar.editor.textual.xgcore.Xgcore with org.eclipse.xtext.common.Terminals

import "http://www.eclipse.org/emf/2002/Gcore" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

PageContainer returns PageContainer:
	{PageContainer}
	(eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* )?
	'PageAndSettingContainer'
	name=EString
	'{'
		('nsURI' nsURI=EString)?
		('nsPrefix' nsPrefix=EString)?
		('styleSettings' '{' styleSettings+=StyleSetting ( "," styleSettings+=StyleSetting)* '}' )?
		('menues' '{' menues+=Menu ( "," menues+=Menu)* '}' )?
		('pages' '{' pages+=Page ( "," pages+=Page)* '}' )?
		('menuablePages' '{' menuablePages+=MenuablePage ( "," menuablePages+=MenuablePage)* '}' )?
		('listablePages' '{' listablePages+=ListablePage ( "," listablePages+=ListablePage)* '}' )?
		('selectablePages' '{' selectablePages+=SelectablePage ( "," selectablePages+=SelectablePage)* '}' )?
	'}';


Page returns Page:
	EditPage | ListPage | ViewPage | CustomPage | LoginPage | ProcessSelectorPage | SelectableListPage | MapPage | MediaPage | ELearningPage | TakePicturePage | RecordAudioPage | ARPage;

MenuablePage returns MenuablePage:
	ListPage | ViewPage | ProcessSelectorPage | ELearningPage;


ListablePage returns ListablePage:
	ListPage | SelectableListPage;


SelectablePage returns SelectablePage:
	SelectableListPage;


Menu returns Menu:
	(eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* )?
	name=EString
	'withStyle' menuStyle=[StyleMenuSettings|EString]
		;

StyleSetting returns StyleSetting:
		('rgbColors' '{' rgbColors+=RGBColor ( "," rgbColors+=RGBColor)* '}' )?
		//'fontColor' fontColor=[RGBColor|EString]
		'fontColor' fontColor=[RGBColor]
		//'backColor' backColor=[RGBColor|EString]
		'backColor' backColor=[RGBColor]
		 pageStyle=StylePageSettings
		( menuStyle=StyleMenuSettings)?
		( selectionStyle=StyleSelectionSettings)?
		( listStyle=StyleListSettings)?
;


StylePageSettings returns StylePageSettings:
	'PageSettings'
	'('
	    //frameColor=[RGBColor|EString] ','
	    frameColor=[RGBColor] ','
	    ( imagePosition=EInt)? ','
		( textPosition=EInt)? ','
		( frame=EInt)?
	')';

EditPage returns EditPage:
	(eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* )?
	'EditPage'
	name=EString
	'(' pageStyle=[StylePageSettings|EString]	')';

ListPage returns ListPage:
	(eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* )?
	'ListPage'
	name=EString
	'('
		 pageStyle=[StylePageSettings|EString] ','
		 listablepageStyle=[StyleListSettings|EString] 
		(',' menu=[Menu|EString])?
	')';

ViewPage returns ViewPage:
	(eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* )?
	'ViewPage'
	name=EString
	'('
		pageStyle=[StylePageSettings|EString]
		(',' menu=[Menu|EString])?
	')';

CustomPage returns CustomPage:
	(eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* )?
	'CustomPage'
	name=EString
	'(' pageStyle=[StylePageSettings|EString] ')';

LoginPage returns LoginPage:
	(eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* )?
	'LoginPage'
	name=EString
	'(' pageStyle=[StylePageSettings|EString] ')';

ProcessSelectorPage returns ProcessSelectorPage:
	(eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* )?
	'ProcessSelectorPage'
	name=EString
	'(' pageStyle=[StylePageSettings|EString]
		(',' menu=[Menu|EString])?
	')';

SelectableListPage returns SelectableListPage:
	(eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* )?
	(multiSelection?='multiSelection')?
	'SelectableListPage'
	name=EString
	'('
		pageStyle=[StylePageSettings|EString] ','
		selectablepageStyle=[StyleSelectionSettings|EString] ','
		listablepageStyle=[StyleListSettings|EString]
	')';

MapPage returns MapPage:
	(eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* )?
	'MapPage'
	name=EString
	'(' pageStyle=[StylePageSettings|EString] ')';

MediaPage returns MediaPage:
	(eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* )?
	'MediaPage'
	name=EString
	'(' pageStyle=[StylePageSettings|EString] ')';

ELearningPage returns ELearningPage:
	(eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* )?
	'ELearningPage'
	name=EString
	'('
		pageStyle=[StylePageSettings|EString]
		(',' menu=[Menu|EString])?
	')';

TakePicturePage returns TakePicturePage:
	(eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* )?
	'TakePicturePage'
	name=EString
	'(' pageStyle=[StylePageSettings|EString] ')';

RecordAudioPage returns RecordAudioPage:
	(eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* )?
	'RecordAudioPage'
	name=EString
	'(' pageStyle=[StylePageSettings|EString] ')';

ARPage returns ARPage:
	(eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* )?
	'ARPage'
	name=EString
	'(' pageStyle=[StylePageSettings|EString] ')';

RGBColor returns RGBColor:
	{RGBColor}
	(eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* )?
	//(eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* )?
	name=EString ('('( red=EInt)? ',' ( green=EInt)? ',' ( blue=EInt)? ')')
	;

StyleListSettings returns StyleListSettings:
	(separatorShow?='separatorShow')?
	'ListSettings'
	'('
		//separatorColor=[RGBColor|EString]
		separatorColor=[RGBColor]
		(',' listStyle=ListStyle)?
		
	')';

enum ListStyle returns ListStyle:
				GRID = 'GRID' | LIST = 'LIST';

StyleSelectionSettings returns StyleSelectionSettings:
	'SelectionSettings'
	'('
		
		 //selectionColor=[RGBColor|EString]
		 selectionColor=[RGBColor]
	')';

StyleMenuSettings returns StyleMenuSettings:
	{StyleMenuSettings}
	( fixedMenu?='fixedMenu')? 
	'MenuSettings'
	'('
		( menuStyle=MenuStyle )?
		
	')'; 

enum MenuStyle returns MenuStyle:
				TILE = 'TILE' | GRID = 'GRID';

EStringToStringMapEntry returns ecore::EStringToStringMapEntry:
	{ecore::EStringToStringMapEntry}
		key=EString
		'='
		value=EString
;		

EAnnotation returns ecore::EAnnotation:
	{ecore::EAnnotation}
	'@'
	(source=EString)?
	('(' details+=EStringToStringMapEntry ( "," details+=EStringToStringMapEntry)* ')' )?
;


EString returns ecore::EString:
	STRING | ID;
				

EInt returns ecore::EInt:
	'-'? INT;

