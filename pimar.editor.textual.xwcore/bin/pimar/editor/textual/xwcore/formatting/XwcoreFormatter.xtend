/*
 * generated by Xtext
 */
package pimar.editor.textual.xwcore.formatting

import com.google.inject.Inject
import org.eclipse.xtext.formatting.impl.AbstractDeclarativeFormatter
import org.eclipse.xtext.formatting.impl.FormattingConfig
import pimar.editor.textual.xwcore.services.XwcoreGrammarAccess
import org.eclipse.xtext.GrammarUtil
import java.util.Set
import java.util.List
import org.eclipse.xtext.Keyword
import pimar.editor.textual.xwcore.services.XwcoreGrammarAccess.ProcessElements
import org.eclipse.xtext.Assignment
import pimar.editor.textual.xwcore.services.XwcoreGrammarAccess.SequenceElements

/**
 * This class contains custom formatting description.
 * 
 * see : http://www.eclipse.org/Xtext/documentation.html#formatting
 * on how and when to use it 
 * 
 * Also see {@link org.eclipse.xtext.xtext.XtextFormattingTokenSerializer} as an example
 */
public class XwcoreFormatter extends AbstractDeclarativeFormatter {

	@Inject extension XwcoreGrammarAccess f

	/**
	 * for customizing the formatter of follower
	 * @modofied 14052016
	 */
	override protected configureFormatting(FormattingConfig c) {

		for (pair : findKeywordPairs('{', '}')) {
			c.setIndentation(pair.first, pair.second)
			c.setLinewrap(1).after(pair.first)
			c.setLinewrap(1).before(pair.second)
			c.setLinewrap(1).after(pair.second)
			c.setLinewrap.after(pair.second)
		}

		for (comma : findKeywords(',')) {
			c.setNoLinewrap().before(comma)
			c.setNoSpace().before(comma)
			c.setLinewrap().after(comma)
		}

		for (comma : findKeywords(';')) {
			c.setNoLinewrap().before(comma)
			c.setNoSpace().before(comma)
			c.setLinewrap().after(comma)
		}		
		
		c.setLinewrap(0, 1, 2).before(SL_COMMENTRule)
		c.setLinewrap(0, 1, 2).before(ML_COMMENTRule)
		c.setLinewrap(0, 1, 1).after(ML_COMMENTRule)

		//val ProcessElements myProcessElements = f.processAccess
		//val SequenceElements mySequenceElements = f.sequenceAccess
		//formatFollower(c, myProcessElements, mySequenceElements)

	}

	/**
	 * for customizing the formatter of followers for indentation
	 * @modified 15042016
	 */
	def private formatFollower(FormattingConfig config, ProcessElements p, SequenceElements s) {

		for (pair : s.findKeywordPairs("{", "}")){
			config.setIndentationDecrement.after(pair.first)
			config.setIndentationIncrement.after(pair.second)
		}
	}


}
